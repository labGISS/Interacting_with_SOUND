{"version":3,"file":"cytoscape-leaflet.js","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../src/assign.js","../src/map-handler.js","../src/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","// Simple, internal Object.assign() polyfill for options objects etc.\r\n\r\nmodule.exports = Object.assign != null ? Object.assign.bind( Object ) : function( tgt, ...srcs ){\r\n  srcs.forEach( src => {\r\n    Object.keys( src ).forEach( k => tgt[k] = src[k] );\r\n  } );\r\n\r\n  return tgt;\r\n};\r\n","import L from 'leaflet'\r\nimport assign from './assign'\r\n\r\n/** @typedef {import('cytoscape')} cytoscape */\r\n\r\n/** @typedef {import('./map-handler').MapHandlerOptions} MapHandlerOptions */\r\n\r\n/**\r\n * @param {MouseEvent} event\r\n * @see https://github.com/cytoscape/cytoscape.js/blob/master/src/extensions/renderer/base/load-listeners.js\r\n */\r\nfunction isMultSelKeyDown(event) {\r\n  return event.shiftKey || event.metaKey || event.ctrlKey; // maybe event.altKey\r\n}\r\n\r\nconst DEFAULT_FIT_PADDING = [50, 50];\r\nconst DEFAULT_ANIMATION_DURATION = 500;\r\nconst HIDDEN_CLASS = 'cytoscape-map__hidden';\r\n\r\nconst DEFAULT_MAP_MOVE_DELAY = 0;\r\n\r\nconst DEFAULT_LAYOUT = {\r\n  name: 'preset',\r\n}\r\n\r\nexport class MapHandler {\r\n  /** @type cytoscape.Core */\r\n  cy;\r\n  /** @type L.MapOptions */\r\n  mapOptions;\r\n  /** @type MapHandlerOptions */\r\n  options;\r\n\r\n  /** @type HTMLElement */\r\n  mapContainer;\r\n  /** @type L.Map */\r\n  map;\r\n\r\n  /** @type boolean | undefined */\r\n  originalAutoungrabify;\r\n  /** @type boolean | undefined */\r\n  originalUserZoomingEnabled;\r\n  /** @type boolean | undefined */\r\n  originalUserPanningEnabled;\r\n\r\n  /** @type cytoscape.NodePositionMap | undefined */\r\n  originalPositions;\r\n  /** @type number | undefined */\r\n  originalZoom;\r\n  /** @type cytoscape.Position | undefined */\r\n  originalPan;\r\n\r\n  /** @type boolean */\r\n  panning = false;\r\n\r\n  onGraphContainerMouseDownBound = this.onGraphContainerMouseDown.bind(this);\r\n  onGraphContainerMouseMoveBound = this.onGraphContainerMouseMove.bind(this);\r\n  onGraphContainerWheelBound = this.onGraphContainerWheel.bind(this);\r\n  onMapMoveBound = this.onMapMove.bind(this);\r\n  // onMapMoveStartBound = this.onMapMoveStart.bind(this);\r\n  onMapMoveEndBound = this.onMapMoveEnd.bind(this);\r\n\r\n  onGraphAddBound = this.onGraphAdd.bind(this);\r\n  onGraphResizeBound = this.onGraphResize.bind(this);\r\n  onGraphDragFreeBound = this.onGraphDragFree.bind(this);\r\n\r\n  saveLayoutPositionAsLatLngBound = this.saveLayoutPositionAsLatLng.bind(this);\r\n\r\n  /**\r\n   * @param {cytoscape.Core} cy\r\n   * @param {L.MapOptions} mapOptions\r\n   * @param {MapHandlerOptions} options\r\n   */\r\n  constructor(cy, mapOptions, options) {\r\n    this.cy = cy;\r\n    this.mapOptions = mapOptions;\r\n    this.options = options;\r\n\r\n    if (!(this.options.getPosition instanceof Function)) {\r\n      throw new Error('getPosition should be a function');\r\n    }\r\n    if (this.options.setPosition && !(this.options.setPosition instanceof Function)) {\r\n      throw new Error('setPosition should be a function');\r\n    }\r\n\r\n    // Cytoscape config\r\n    this.originalAutoungrabify = this.cy.autoungrabify();\r\n    this.originalUserZoomingEnabled = this.cy.userZoomingEnabled();\r\n    this.originalUserPanningEnabled = this.cy.userPanningEnabled();\r\n\r\n    this.cy.userZoomingEnabled(false);\r\n    this.cy.userPanningEnabled(false);\r\n\r\n    // Cytoscape events\r\n    const graphContainer = /** @type HTMLElement */ (this.cy.container());\r\n    // graphContainer.addEventListener('mousedown', this.onGraphContainerMouseDownBound);\r\n    // graphContainer.addEventListener('mousemove', this.onGraphContainerMouseMoveBound);\r\n    this.cy.on('tapstart', this.onGraphContainerMouseDownBound);\r\n    graphContainer.addEventListener('wheel', this.onGraphContainerWheelBound);\r\n    this.cy.on('add', this.onGraphAddBound);\r\n    this.cy.on('resize', this.onGraphResizeBound);\r\n    this.cy.on('dragfree', this.onGraphDragFreeBound);\r\n    this.cy.on('cxttap', \"node\", function(event) {\r\n      event.target.unlock();\r\n    });\r\n\r\n    // this.cy.on('layoutstart layoutready layoutstop ready render destroy pan dragpan zoom pinchzoom scrollzoom viewport resize', (evt) => {\r\n    //   console.log(evt.type);\r\n    // })\r\n    //\r\n    // this.cy.one('render', (evt) => {\r\n    //   console.log(evt);\r\n    // })\r\n\r\n    // Map container\r\n    this.mapContainer = document.createElement('div');\r\n    this.mapContainer.style.position = 'absolute';\r\n    this.mapContainer.style.top = '0px';\r\n    this.mapContainer.style.left = '0px';\r\n    this.mapContainer.style.width = '100%';\r\n    this.mapContainer.style.height = '100%';\r\n    graphContainer.insertBefore(this.mapContainer, this.cy.renderer().data.canvasContainer);\r\n\r\n    // Leaflet instance\r\n    this.map = new L.Map(this.mapContainer, this.mapOptions);\r\n    this.fit(undefined, { padding: DEFAULT_FIT_PADDING, animate: false });\r\n\r\n    // Map events\r\n    this.map.on('move', this.onMapMoveBound);\r\n    // this.map.on('movestart', this.onMapMoveStartBound);\r\n    this.map.on('moveend', this.onMapMoveEndBound);\r\n\r\n    // Cytoscape unit viewport\r\n    this.originalZoom = this.cy.zoom();\r\n    this.originalPan = { ...this.cy.pan() };\r\n\r\n    const zoom = 1;\r\n    const pan = { x: 0, y: 0 };\r\n\r\n    if (this.options.animate) {\r\n      this.cy.animate({\r\n        zoom: zoom,\r\n        pan: pan,\r\n      }, {\r\n        duration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n        easing: 'linear',\r\n      });\r\n    } else {\r\n      this.cy.viewport(\r\n          zoom,\r\n          pan\r\n      );\r\n    }\r\n\r\n    // Cytoscape positions\r\n    this.enableGeographicPositions();\r\n  }\r\n\r\n  destroy() {\r\n    // Cytoscape events\r\n    const graphContainer = /** @type HTMLElement */ (this.cy.container());\r\n    // graphContainer.removeEventListener('mousedown', this.onGraphContainerMouseDownBound);\r\n    // graphContainer.removeEventListener('mousemove', this.onGraphContainerMouseMoveBound);\r\n    graphContainer.removeEventListener('wheel', this.onGraphContainerWheelBound);\r\n    this.cy.off('tapstart', this.onGraphContainerMouseDownBound);\r\n    this.cy.off('add', this.onGraphAddBound);\r\n    this.cy.off('resize', this.onGraphResizeBound);\r\n    this.cy.off('dragfree', this.onGraphDragFreeBound);\r\n\r\n    // Cytoscape config\r\n    this.cy.autoungrabify(this.originalAutoungrabify);\r\n    this.cy.userZoomingEnabled(this.originalUserZoomingEnabled);\r\n    this.cy.userPanningEnabled(this.originalUserPanningEnabled);\r\n\r\n    this.originalAutoungrabify = undefined;\r\n    this.originalUserZoomingEnabled = undefined;\r\n    this.originalUserPanningEnabled = undefined;\r\n\r\n    // Map events\r\n    this.map.off('move', this.onMapMoveBound);\r\n    // this.map.off('dragstart', this.onMapDragStartBound);\r\n    this.map.off('dragend');\r\n\r\n    // Map instance\r\n    this.map.remove();\r\n    this.map = undefined;\r\n\r\n    // Map container\r\n    this.mapContainer.remove();\r\n    this.mapContainer = undefined;\r\n\r\n    // Cytoscape unit viewport\r\n    if (this.options.animate) {\r\n      this.cy.animate({\r\n        zoom: this.originalZoom,\r\n        pan: this.originalPan,\r\n      }, {\r\n        duration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n        easing: 'linear',\r\n      });\r\n    } else {\r\n      this.cy.viewport(\r\n          this.originalZoom,\r\n          this.originalPan\r\n      );\r\n    }\r\n\r\n    this.originalZoom = undefined;\r\n    this.originalPan = undefined;\r\n\r\n    // Cytoscape positions\r\n    this.disableGeographicPositions();\r\n\r\n    this.cy = undefined;\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {cytoscape.NodeCollection} nodes\r\n   * @param {L.FitBoundsOptions} options\r\n   */\r\n  fit(nodes = this.cy.nodes(), options) {\r\n    const bounds = this.getNodeLngLatBounds(nodes);\r\n    if (!bounds.isValid()) {\r\n      return;\r\n    }\r\n\r\n    this.map.fitBounds(bounds, options);\r\n  }\r\n\r\n\r\n  /**\r\n   * Save each node current layout position as the current geographical position.\r\n   * Node's position is saved into its scratch, as <i>leaflet</i> namespace and <i>currentGeoposition<i> LatLng object\r\n   * @param {cytoscape.NodeCollection} nodes\r\n   */\r\n  saveLayoutPositionAsLatLng(nodes = this.cy.nodes()) {\r\n    nodes.forEach((node) => {\r\n          // if (!(node.scratch('leaflet') && node.scratch('leaflet')['currentGeoposition'])) {\r\n          node.scratch('leaflet', {currentGeoposition: this.map.containerPointToLatLng(node.position())})\r\n          // }\r\n        }\r\n    );\r\n\r\n  }\r\n\r\n  /**\r\n   * Delete layout geographic position from each node's scratch\r\n   * @param nodes\r\n   */\r\n  deleteLatLngLayoutPosition(nodes= this.cy.nodes()) {\r\n    nodes.forEach((node) => {\r\n      if (node.scratch('leaflet') && node.scratch('leaflet').currentGeoposition) {\r\n        delete node.scratch('leaflet').currentGeoposition;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update nodes positions (calling node.position() method)\r\n   * and (optionally) hide nodes without geographical position\r\n   * @private\r\n   */\r\n  updateNodePosition(nodes = this.cy.nodes()) {\r\n    nodes.forEach((node) => {\r\n\r\n      // let wasLocked = node.locked();\r\n\r\n      // if (wasLocked) node.unlock();\r\n\r\n      node.unlock();\r\n      let position = this.getGeographicPosition(node);\r\n      if(position) {\r\n        node.position(position);\r\n        // if (this.getNodeLngLat(node)) { // nodes that have native geographical positions cannot be dragged\r\n        node.lock();\r\n        // }\r\n      }\r\n\r\n      // hide nodes without position\r\n      if (!position && this.options.hideNonPositional) {\r\n        // const nodesWithoutPosition = nodes.filter(node => !positions[node.id()]);\r\n        node.addClass(HIDDEN_CLASS).style('display', 'none');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {cytoscape.LayoutOptions}\r\n   * @param {*} [customOptions]\r\n   */\r\n  getLayout(customOptions= undefined) {\r\n    return assign(DEFAULT_LAYOUT, this.options.layout, customOptions);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  enableGeographicPositions() {\r\n    const nodes = this.cy.nodes();\r\n\r\n    this.originalPositions = Object.fromEntries(nodes.map(node => {\r\n      return [node.id(), { ...node.position() }];\r\n    }));\r\n\r\n    // const positions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(\r\n    //   /** @type [string, cytoscape.Position | undefined][] */ (nodes.map(node => {\r\n    //     return [node.id(), this.getGeographicPosition(node)];\r\n    //   })).filter(([_id, position]) => {\r\n    //     return !!position;\r\n    //   })\r\n    // ));\r\n\r\n    // this.cy.elements().makeLayout(this.getLayout({\r\n    //   fit: false,\r\n    //   animate: this.options.animate,\r\n    //   animationDuration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n    //   animationEasing: 'ease-out-cubic',\r\n    // }))\r\n    //     // .one('layoutstop', this.saveLayoutPositionAsLatLngBound)\r\n    //     .run();\r\n\r\n    this.cy.nodes().forEach((node) => {\r\n      if (this.getNodeLngLat(node)) {\r\n        node.lock();\r\n      }\r\n    });\r\n\r\n    this.updateNodePosition(nodes);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeCollection | undefined} nodes\r\n   */\r\n  updateGeographicPositions(nodes = this.cy.nodes()) {\r\n    // const positions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(\r\n    //   /** @type [string, cytoscape.Position | undefined][] */ (nodes.map(node => {\r\n    //     return [node.id(), this.getGeographicPosition(node)];\r\n    //   })).filter(([_id, position]) => {\r\n    //     return !!position;\r\n    //   })\r\n    // ));\r\n    //\r\n    // // update only positions which have changed, for cytoscape-edgehandles compatibility\r\n    // const currentPositions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(nodes.map(node => {\r\n    //   return [node.id(), { ...node.position() }];\r\n    // })));\r\n    // const updatedPositions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(\r\n    //   Object.entries(positions).filter(([id, position]) => {\r\n    //     const currentPosition = currentPositions[id];\r\n    //     return !this.arePositionsEqual(currentPosition, position);\r\n    //   })\r\n    // ));\r\n    //\r\n    // // hide nodes without position\r\n    // const nodesWithoutPosition = nodes.filter(node => !positions[node.id()]);\r\n    // nodesWithoutPosition.addClass(HIDDEN_CLASS).style('display', 'none');\r\n\r\n    // this.cy.nodes().forEach((node) => {\r\n    //   if (this.getGeographicPosition(node)) {\r\n    //     node.lock();\r\n    //   }\r\n    // });\r\n\r\n    this.updateNodePosition(nodes);\r\n\r\n    // if (this.options.runLayoutOnViewport) {\r\n    //   console.log(\"Layout on viewport\");\r\n    //   this.cy.layout(this.getLayout({\r\n    //     fit: false,\r\n    //     animate: false\r\n    //   })).run();\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  disableGeographicPositions() {\r\n    const nodes = this.cy.nodes();\r\n\r\n    // show nodes without position\r\n    if (this.options.hideNonPositional) {\r\n      const nodesWithoutPosition = nodes.filter(node => node.hasClass(HIDDEN_CLASS));\r\n      nodesWithoutPosition.removeClass(HIDDEN_CLASS).style('display', null);\r\n    }\r\n\r\n    nodes.forEach((node) => {\r\n      // if (this.originalPositions && this.originalPositions[node.id()]) {\r\n      //   node.position(this.originalPositions[node.id()]);\r\n      //   node.unlock();\r\n      // }\r\n      node.unlock();\r\n    });\r\n\r\n    this.cy.fit();\r\n    // this.cy.layout(this.getLayout({\r\n    //   fit: false,\r\n    //   animate: this.options.animate,\r\n    //   animationDuration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n    //   animationEasing: 'ease-in-cubic',\r\n    //   stop: () => {\r\n    //     // show nodes without position\r\n    //     const nodesWithoutPosition = nodes.filter(node => node.hasClass(HIDDEN_CLASS));\r\n    //     nodesWithoutPosition.removeClass(HIDDEN_CLASS).style('display', null);\r\n    //   }\r\n    // })).run();\r\n\r\n    this.cy.one('layoutstop', (evt) => {\r\n      evt.cy.nodes().unlock();\r\n    });\r\n\r\n    this.originalPositions = undefined;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.EventObject} cyEventObject\r\n   */\r\n  onGraphContainerMouseDown(cyEventObject) {\r\n    let originalEvent = cyEventObject.originalEvent;\r\n    if (\r\n        originalEvent.buttons === 1 &&\r\n        !isMultSelKeyDown(originalEvent) &&\r\n        !this.cy.renderer().hoverData.down\r\n    ) {\r\n      this.cy.renderer().hoverData.dragging = true; // cytoscape-lasso compatibility\r\n\r\n      this.saveLayoutPositionAsLatLng(cyEventObject.cy.nodes());\r\n      this.dispatchMapEvent(originalEvent);\r\n\r\n      this.cy.one('tapdrag', this.onGraphContainerMouseMoveBound);\r\n\r\n      // this.cy.nodes('#London-NewYork1').on('position', (evt) => {\r\n      //   let data = {\r\n      //     position: evt.target.position(),\r\n      //     rendered: evt.target.renderedPosition(),\r\n      //     relative: evt.target.relativePosition()\r\n      //   }\r\n      //\r\n      //   if (evt.target.scratch('leaflet')) {\r\n      //     data['geoposition'] = evt.target.scratch('leaflet').currentGeoposition;\r\n      //   }\r\n      //\r\n      //   console.table(data);\r\n      // });\r\n\r\n      cyEventObject.cy.one('tapend', (cyUpEventObject) => {\r\n        // this.deleteLatLngLayoutPosition(cyUpEventObject.cy.nodes());\r\n        // this.updateGeographicPositions(cyUpEventObject.cy.nodes());\r\n\r\n        // console.warn(\"TAPEND\");\r\n        // setTimeout(()=>{\r\n        //   this.cy.nodes('#London-NewYork1').off('position');\r\n        // }, 500);\r\n\r\n        if (!this.panning) {\r\n          return;\r\n        }\r\n\r\n        this.panning = false;\r\n\r\n        // prevent unselecting in Cytoscape mouseup\r\n        this.cy.renderer().hoverData.dragged = true;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.EventObject} cyEventObject\r\n   */\r\n  onGraphContainerMouseMove(cyEventObject) {\r\n    const originalEvent = cyEventObject.originalEvent;\r\n    if (\r\n        originalEvent.buttons === 1 &&\r\n        !isMultSelKeyDown(originalEvent) &&\r\n        !this.cy.renderer().hoverData.down\r\n    ) {\r\n      this.panning = true;\r\n      cyEventObject.preventDefault();\r\n      this.dispatchMapEvent(originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {MouseEvent} event\r\n   */\r\n  onGraphContainerWheel(event) {\r\n    this.dispatchMapEvent(event);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onMapMove() {\r\n    this.updateGeographicPositions();\r\n  }\r\n\r\n  onMapMoveEnd() {\r\n    // console.log(\"moveend\");\r\n    setTimeout(() => {\r\n      this.cy.nodes().forEach((node) => {\r\n\r\n        if (!this.getNodeLngLat(node)) {\r\n          // console.log(\"unlock\");\r\n          // this.updateNodePosition(node);\r\n          node.unlock();\r\n        }\r\n      });\r\n    }, this.options.delayOnMove || DEFAULT_MAP_MOVE_DELAY);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.EventObject} event\r\n   */\r\n  onGraphAdd(event) {\r\n    if (!event.target.isNode()) {\r\n      return;\r\n    }\r\n\r\n    const node = /** @type cytoscape.NodeSingular */ (event.target);\r\n\r\n    this.originalPositions[node.id()] = { ...node.position() };\r\n\r\n    const nodes = this.cy.collection().merge(node);\r\n    this.updateGeographicPositions(nodes);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onGraphResize() {\r\n    this.map.invalidateSize(false);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.EventObject} event\r\n   */\r\n  onGraphDragFree(event) {\r\n    const node = /** @type cytoscape.NodeSingular */ (event.target);\r\n\r\n    if (this.options.setPosition) {\r\n      const lngLat = this.map.containerPointToLatLng(node.position());\r\n      this.options.setPosition(node, lngLat);\r\n    }\r\n\r\n    const nodes = this.cy.collection().merge(node);\r\n    this.updateGeographicPositions(nodes);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {MouseEvent} event\r\n   */\r\n  dispatchMapEvent(event) {\r\n    if (event.target === this.mapContainer || this.mapContainer.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    const clonedEvent = new event.constructor(event.type, event);\r\n    this.map.getContainer().dispatchEvent(clonedEvent);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeSingular} node\r\n   * @return {L.LatLng | undefined}\r\n   */\r\n  getNodeLngLat(node) {\r\n    const lngLatLike = this.options.getPosition(node);\r\n    if (!lngLatLike) {\r\n      return;\r\n    }\r\n\r\n    let lngLat;\r\n    try {\r\n      lngLat = L.latLng(lngLatLike);\r\n    } catch (e) {\r\n      return;\r\n    }\r\n\r\n    return lngLat;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeCollection} nodes\r\n   * @return {L.LatLngBounds}\r\n   */\r\n  getNodeLngLatBounds(nodes = this.cy.nodes()) {\r\n    const bounds = nodes.reduce((bounds, node) => {\r\n      const lngLat = this.getNodeLngLat(node);\r\n      if (!lngLat) {\r\n        return bounds;\r\n      }\r\n\r\n      return bounds.extend(lngLat);\r\n    }, L.latLngBounds([]));\r\n    return bounds;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeSingular} node\r\n   * @return {cytoscape.Position | undefined}\r\n   */\r\n  getGeographicPosition(node) {\r\n    const lngLat = this.getNodeLngLat(node) || (node.scratch('leaflet') && node.scratch('leaflet').currentGeoposition);\r\n    if (!lngLat) {\r\n      return;\r\n    }\r\n\r\n    const position = this.map.latLngToContainerPoint(lngLat);\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.Position} position1\r\n   * @param {cytoscape.Position} position2\r\n   * @return {boolean}\r\n   */\r\n  arePositionsEqual(position1, position2) {\r\n    return position1.x === position2.x && position1.y === position2.y;\r\n  }\r\n}\r\n","import { MapHandler } from './map-handler';\r\n\r\nfunction register(cytoscape) {\r\n  if (!cytoscape) {\r\n    return;\r\n  }\r\n\r\n  cytoscape('core', 'L', function (mapConfig, config) {\r\n    return new MapHandler((this), mapConfig, config);\r\n  });\r\n}\r\n\r\nif (typeof window.cytoscape !== 'undefined') {\r\n  register(window.cytoscape);\r\n}\r\n\r\nexport default register;\r\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","assign","bind","tgt","srcs","forEach","src","keys","k","isMultSelKeyDown","event","shiftKey","metaKey","ctrlKey","DEFAULT_FIT_PADDING","DEFAULT_ANIMATION_DURATION","HIDDEN_CLASS","DEFAULT_MAP_MOVE_DELAY","DEFAULT_LAYOUT","name","MapHandler","cy","mapOptions","options","onGraphContainerMouseDown","onGraphContainerMouseMove","onGraphContainerWheel","onMapMove","onMapMoveEnd","onGraphAdd","onGraphResize","onGraphDragFree","saveLayoutPositionAsLatLng","getPosition","Function","Error","setPosition","originalAutoungrabify","autoungrabify","originalUserZoomingEnabled","userZoomingEnabled","originalUserPanningEnabled","userPanningEnabled","graphContainer","container","on","onGraphContainerMouseDownBound","addEventListener","onGraphContainerWheelBound","onGraphAddBound","onGraphResizeBound","onGraphDragFreeBound","unlock","mapContainer","document","createElement","style","position","top","left","width","height","insertBefore","renderer","data","canvasContainer","map","L","Map","fit","undefined","padding","animate","onMapMoveBound","onMapMoveEndBound","originalZoom","zoom","originalPan","pan","x","y","duration","animationDuration","easing","viewport","enableGeographicPositions","removeEventListener","off","remove","disableGeographicPositions","nodes","bounds","getNodeLngLatBounds","isValid","fitBounds","node","scratch","currentGeoposition","containerPointToLatLng","getGeographicPosition","lock","hideNonPositional","addClass","customOptions","layout","originalPositions","fromEntries","id","getNodeLngLat","updateNodePosition","nodesWithoutPosition","filter","hasClass","removeClass","one","evt","cyEventObject","originalEvent","buttons","hoverData","down","dragging","dispatchMapEvent","onGraphContainerMouseMoveBound","cyUpEventObject","panning","dragged","preventDefault","updateGeographicPositions","setTimeout","delayOnMove","isNode","collection","merge","invalidateSize","lngLat","contains","clonedEvent","constructor","type","getContainer","dispatchEvent","lngLatLike","latLng","e","reduce","extend","latLngBounds","latLngToContainerPoint","position1","position2","register","cytoscape","mapConfig","config","window"],"mappings":"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"}