!function(i,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("leaflet")):"function"==typeof define&&define.amd?define(["leaflet"],n):(i="undefined"!=typeof globalThis?globalThis:i||self).CytoscapeLeaflet=n(i.L)}(this,(function(i){"use strict";function n(i){return i&&"object"==typeof i&&"default"in i?i:{default:i}}var t=n(i);var o=function(i){if(Array.isArray(i))return i};var e=function(i,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(i)){var t=[],o=!0,e=!1,a=void 0;try{for(var r,s=i[Symbol.iterator]();!(o=(r=s.next()).done)&&(t.push(r.value),!n||t.length!==n);o=!0);}catch(i){e=!0,a=i}finally{try{o||null==s.return||s.return()}finally{if(e)throw a}}return t}};var a=function(i,n){(null==n||n>i.length)&&(n=i.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=i[t];return o};var r=function(i,n){if(i){if("string"==typeof i)return a(i,n);var t=Object.prototype.toString.call(i).slice(8,-1);return"Object"===t&&i.constructor&&(t=i.constructor.name),"Map"===t||"Set"===t?Array.from(i):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?a(i,n):void 0}};var s=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")};var h=function(i,n){return o(i)||e(i,n)||r(i,n)||s()};var u=function(i,n){if(!(i instanceof n))throw new TypeError("Cannot call a class as a function")};function d(i,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(i,o.key,o)}}var c=function(i,n,t){return n&&d(i.prototype,n),t&&d(i,t),i};var l=function(i,n,t){return n in i?Object.defineProperty(i,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[n]=t,i};function p(i,n){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(i);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(i,n).enumerable}))),t.push.apply(t,o)}return t}function f(i){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){l(i,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))}))}return i}function v(i){return i.shiftKey||i.metaKey||i.ctrlKey}var g=[50,50],y="cytoscape-map__hidden",m=function(){function i(n,o,e){if(u(this,i),l(this,"cy",void 0),l(this,"mapOptions",void 0),l(this,"options",void 0),l(this,"mapContainer",void 0),l(this,"map",void 0),l(this,"originalAutoungrabify",void 0),l(this,"originalUserZoomingEnabled",void 0),l(this,"originalUserPanningEnabled",void 0),l(this,"originalPositions",void 0),l(this,"originalZoom",void 0),l(this,"originalPan",void 0),l(this,"panning",!1),l(this,"onGraphContainerMouseDownBound",this.onGraphContainerMouseDown.bind(this)),l(this,"onGraphContainerMouseMoveBound",this.onGraphContainerMouseMove.bind(this)),l(this,"onGraphContainerWheelBound",this.onGraphContainerWheel.bind(this)),l(this,"onMapMoveBound",this.onMapMove.bind(this)),l(this,"onGraphAddBound",this.onGraphAdd.bind(this)),l(this,"onGraphResizeBound",this.onGraphResize.bind(this)),l(this,"onGraphDragFreeBound",this.onGraphDragFree.bind(this)),this.cy=n,this.mapOptions=o,this.options=e,!(this.options.getPosition instanceof Function))throw new Error("getPosition should be a function");if(this.options.setPosition&&!(this.options.setPosition instanceof Function))throw new Error("setPosition should be a function");this.originalAutoungrabify=this.cy.autoungrabify(),this.originalUserZoomingEnabled=this.cy.userZoomingEnabled(),this.originalUserPanningEnabled=this.cy.userPanningEnabled(),this.cy.userZoomingEnabled(!1),this.cy.userPanningEnabled(!1);var a=this.cy.container();a.addEventListener("mousedown",this.onGraphContainerMouseDownBound),a.addEventListener("mousemove",this.onGraphContainerMouseMoveBound),a.addEventListener("wheel",this.onGraphContainerWheelBound),this.cy.on("add",this.onGraphAddBound),this.cy.on("resize",this.onGraphResizeBound),this.cy.on("dragfree",this.onGraphDragFreeBound),this.mapContainer=document.createElement("div"),this.mapContainer.style.position="absolute",this.mapContainer.style.top="0px",this.mapContainer.style.left="0px",this.mapContainer.style.width="100%",this.mapContainer.style.height="100%",a.insertBefore(this.mapContainer,this.cy.renderer().data.canvasContainer),this.map=new t.default.Map(this.mapContainer,this.mapOptions),this.fit(void 0,{padding:g,animate:!1}),this.map.on("move",this.onMapMoveBound),this.originalZoom=this.cy.zoom(),this.originalPan=f({},this.cy.pan());var r,s={x:0,y:0};this.options.animate?this.cy.animate({zoom:1,pan:s},{duration:null!==(r=this.options.animationDuration)&&void 0!==r?r:500,easing:"linear"}):this.cy.viewport(1,s);this.enableGeographicPositions()}return c(i,[{key:"destroy",value:function(){var i,n=this.cy.container();(n.removeEventListener("mousedown",this.onGraphContainerMouseDownBound),n.removeEventListener("mousemove",this.onGraphContainerMouseMoveBound),n.removeEventListener("wheel",this.onGraphContainerWheelBound),this.cy.off("add",this.onGraphAddBound),this.cy.off("resize",this.onGraphResizeBound),this.cy.off("dragfree",this.onGraphDragFreeBound),this.cy.autoungrabify(this.originalAutoungrabify),this.cy.userZoomingEnabled(this.originalUserZoomingEnabled),this.cy.userPanningEnabled(this.originalUserPanningEnabled),this.originalAutoungrabify=void 0,this.originalUserZoomingEnabled=void 0,this.originalUserPanningEnabled=void 0,this.map.off("move",this.onMapMoveBound),this.map.remove(),this.map=void 0,this.mapContainer.remove(),this.mapContainer=void 0,this.options.animate)?this.cy.animate({zoom:this.originalZoom,pan:this.originalPan},{duration:null!==(i=this.options.animationDuration)&&void 0!==i?i:500,easing:"linear"}):this.cy.viewport(this.originalZoom,this.originalPan);this.originalZoom=void 0,this.originalPan=void 0,this.disableGeographicPositions(),this.cy=void 0,this.options=void 0}},{key:"fit",value:function(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.cy.nodes(),n=arguments.length>1?arguments[1]:void 0,t=this.getNodeLngLatBounds(i);t.isValid()&&this.map.fitBounds(t,n)}},{key:"enableGeographicPositions",value:function(){var i,n=this,t=this.cy.nodes();this.originalPositions=Object.fromEntries(t.map((function(i){return[i.id(),f({},i.position())]})));var o=Object.fromEntries(t.map((function(i){return[i.id(),n.getGeographicPosition(i)]})).filter((function(i){var n=h(i,2);n[0];return!!n[1]})));t.filter((function(i){return!o[i.id()]})).addClass(y).style("display","none"),this.cy.layout({name:"preset",positions:o,fit:!1,animate:this.options.animate,animationDuration:null!==(i=this.options.animationDuration)&&void 0!==i?i:500,animationEasing:"ease-out-cubic"}).run()}},{key:"updateGeographicPositions",value:function(){var i=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.cy.nodes(),t=Object.fromEntries(n.map((function(n){return[n.id(),i.getGeographicPosition(n)]})).filter((function(i){var n=h(i,2);n[0];return!!n[1]}))),o=Object.fromEntries(n.map((function(i){return[i.id(),f({},i.position())]}))),e=Object.fromEntries(Object.entries(t).filter((function(n){var t=h(n,2),e=t[0],a=t[1],r=o[e];return!i.arePositionsEqual(r,a)}))),a=n.filter((function(i){return!t[i.id()]}));a.addClass(y).style("display","none"),this.cy.layout({name:"preset",positions:e,fit:!1}).run()}},{key:"disableGeographicPositions",value:function(){var i,n=this.cy.nodes();this.cy.layout({name:"preset",positions:this.originalPositions,fit:!1,animate:this.options.animate,animationDuration:null!==(i=this.options.animationDuration)&&void 0!==i?i:500,animationEasing:"ease-in-cubic",stop:function(){n.filter((function(i){return i.hasClass(y)})).removeClass(y).style("display",null)}}).run(),this.originalPositions=void 0}},{key:"onGraphContainerMouseDown",value:function(i){var n=this;1!==i.buttons||v(i)||this.cy.renderer().hoverData.down||(this.cy.renderer().hoverData.dragging=!0,this.dispatchMapEvent(i),document.addEventListener("mouseup",(function(){n.panning&&(n.panning=!1,n.cy.renderer().hoverData.dragged=!0)}),{once:!0}))}},{key:"onGraphContainerMouseMove",value:function(i){1!==i.buttons||v(i)||this.cy.renderer().hoverData.down||(this.panning=!0,this.dispatchMapEvent(i))}},{key:"onGraphContainerWheel",value:function(i){this.dispatchMapEvent(i)}},{key:"onMapMove",value:function(){this.updateGeographicPositions()}},{key:"onGraphAdd",value:function(i){if(i.target.isNode()){var n=i.target;this.originalPositions[n.id()]=f({},n.position());var t=this.cy.collection().merge(n);this.updateGeographicPositions(t)}}},{key:"onGraphResize",value:function(){this.map.invalidateSize(!1)}},{key:"onGraphDragFree",value:function(i){var n=i.target;if(this.options.setPosition){var t=this.map.containerPointToLatLng(n.position());this.options.setPosition(n,t)}var o=this.cy.collection().merge(n);this.updateGeographicPositions(o)}},{key:"dispatchMapEvent",value:function(i){if(i.target!==this.mapContainer&&!this.mapContainer.contains(i.target)){var n=new i.constructor(i.type,i);this.map.getContainer().dispatchEvent(n)}}},{key:"getNodeLngLat",value:function(i){var n=this.options.getPosition(i,this.map);if(n){var o;try{o=t.default.latLng(n)}catch(i){return}return o}}},{key:"getNodeLngLatBounds",value:function(){var i=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.cy.nodes(),o=n.reduce((function(n,t){var o=i.getNodeLngLat(t);return o?n.extend(o):n}),t.default.latLngBounds([]));return o}},{key:"getGeographicPosition",value:function(i){var n=this.getNodeLngLat(i);if(n)return this.map.latLngToContainerPoint(n)}},{key:"arePositionsEqual",value:function(i,n){return i.x===n.x&&i.y===n.y}}]),i}();function b(i){i&&i("core","L",(function(i,n){return new m(this,i,n)}))}return void 0!==window.cytoscape&&b(window.cytoscape),b}));
//# sourceMappingURL=cytoscape-leaflet.min.js.map
