{"version":3,"file":"cytoscape-leaflet.min.js","sources":["../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../src/map-handler.js","../src/index.js"],"sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import L from 'leaflet'\r\n\r\n/** @typedef {import('cytoscape')} cytoscape */\r\n\r\n/** @typedef {import('./map-handler').MapHandlerOptions} MapHandlerOptions */\r\n\r\n/**\r\n * @param {MouseEvent} event\r\n * @see https://github.com/cytoscape/cytoscape.js/blob/master/src/extensions/renderer/base/load-listeners.js\r\n */\r\nfunction isMultSelKeyDown(event) {\r\n  return event.shiftKey || event.metaKey || event.ctrlKey; // maybe event.altKey\r\n}\r\n\r\nconst DEFAULT_FIT_PADDING = [50, 50];\r\nconst DEFAULT_ANIMATION_DURATION = 500;\r\nconst HIDDEN_CLASS = 'cytoscape-map__hidden';\r\n\r\nexport class MapHandler {\r\n  /** @type cytoscape.Core */\r\n  cy;\r\n  /** @type L.MapOptions */\r\n  mapOptions;\r\n  /** @type MapHandlerOptions */\r\n  options;\r\n\r\n  /** @type HTMLElement */\r\n  mapContainer;\r\n  /** @type L.Map */\r\n  map;\r\n\r\n  /** @type boolean | undefined */\r\n  originalAutoungrabify;\r\n  /** @type boolean | undefined */\r\n  originalUserZoomingEnabled;\r\n  /** @type boolean | undefined */\r\n  originalUserPanningEnabled;\r\n\r\n  /** @type cytoscape.NodePositionMap | undefined */\r\n  originalPositions;\r\n  /** @type number | undefined */\r\n  originalZoom;\r\n  /** @type cytoscape.Position | undefined */\r\n  originalPan;\r\n\r\n  /** @type boolean */\r\n  panning = false;\r\n\r\n  onGraphContainerMouseDownBound = this.onGraphContainerMouseDown.bind(this);\r\n  onGraphContainerMouseMoveBound = this.onGraphContainerMouseMove.bind(this);\r\n  onGraphContainerWheelBound = this.onGraphContainerWheel.bind(this);\r\n  onMapMoveBound = this.onMapMove.bind(this);\r\n\r\n  onGraphAddBound = this.onGraphAdd.bind(this);\r\n  onGraphResizeBound = this.onGraphResize.bind(this);\r\n  onGraphDragFreeBound = this.onGraphDragFree.bind(this);\r\n\r\n  /**\r\n   * @param {cytoscape.Core} cy\r\n   * @param {L.MapOptions} mapOptions\r\n   * @param {MapHandlerOptions} options\r\n   */\r\n  constructor(cy, mapOptions, options) {\r\n    this.cy = cy;\r\n    this.mapOptions = mapOptions;\r\n    this.options = options;\r\n\r\n    if (!(this.options.getPosition instanceof Function)) {\r\n      throw new Error('getPosition should be a function');\r\n    }\r\n    if (this.options.setPosition && !(this.options.setPosition instanceof Function)) {\r\n      throw new Error('setPosition should be a function');\r\n    }\r\n\r\n    // Cytoscape config\r\n    this.originalAutoungrabify = this.cy.autoungrabify();\r\n    this.originalUserZoomingEnabled = this.cy.userZoomingEnabled();\r\n    this.originalUserPanningEnabled = this.cy.userPanningEnabled();\r\n\r\n    this.cy.userZoomingEnabled(false);\r\n    this.cy.userPanningEnabled(false);\r\n\r\n    // Cytoscape events\r\n    const graphContainer = /** @type HTMLElement */ (this.cy.container());\r\n    graphContainer.addEventListener('mousedown', this.onGraphContainerMouseDownBound);\r\n    graphContainer.addEventListener('mousemove', this.onGraphContainerMouseMoveBound);\r\n    graphContainer.addEventListener('wheel', this.onGraphContainerWheelBound);\r\n    this.cy.on('add', this.onGraphAddBound);\r\n    this.cy.on('resize', this.onGraphResizeBound);\r\n    this.cy.on('dragfree', this.onGraphDragFreeBound);\r\n\r\n    // Map container\r\n    this.mapContainer = document.createElement('div');\r\n    this.mapContainer.style.position = 'absolute';\r\n    this.mapContainer.style.top = '0px';\r\n    this.mapContainer.style.left = '0px';\r\n    this.mapContainer.style.width = '100%';\r\n    this.mapContainer.style.height = '100%';\r\n    graphContainer.insertBefore(this.mapContainer, this.cy.renderer().data.canvasContainer);\r\n\r\n    // Leaflet instance\r\n    this.map = new L.Map(this.mapContainer, this.mapOptions);\r\n    this.fit(undefined, { padding: DEFAULT_FIT_PADDING, animate: false });\r\n\r\n    // Map events\r\n    this.map.on('move', this.onMapMoveBound);\r\n\r\n    // Cytoscape unit viewport\r\n    this.originalZoom = this.cy.zoom();\r\n    this.originalPan = { ...this.cy.pan() };\r\n\r\n    const zoom = 1;\r\n    const pan = { x: 0, y: 0 };\r\n\r\n    if (this.options.animate) {\r\n      this.cy.animate({\r\n        zoom: zoom,\r\n        pan: pan,\r\n      }, {\r\n        duration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n        easing: 'linear',\r\n      });\r\n    } else {\r\n      this.cy.viewport(\r\n        zoom,\r\n        pan\r\n      );\r\n    }\r\n\r\n    // Cytoscape positions\r\n    this.enableGeographicPositions();\r\n  }\r\n\r\n  destroy() {\r\n    // Cytoscape events\r\n    const graphContainer = /** @type HTMLElement */ (this.cy.container());\r\n    graphContainer.removeEventListener('mousedown', this.onGraphContainerMouseDownBound);\r\n    graphContainer.removeEventListener('mousemove', this.onGraphContainerMouseMoveBound);\r\n    graphContainer.removeEventListener('wheel', this.onGraphContainerWheelBound);\r\n    this.cy.off('add', this.onGraphAddBound);\r\n    this.cy.off('resize', this.onGraphResizeBound);\r\n    this.cy.off('dragfree', this.onGraphDragFreeBound);\r\n\r\n    // Cytoscape config\r\n    this.cy.autoungrabify(this.originalAutoungrabify);\r\n    this.cy.userZoomingEnabled(this.originalUserZoomingEnabled);\r\n    this.cy.userPanningEnabled(this.originalUserPanningEnabled);\r\n\r\n    this.originalAutoungrabify = undefined;\r\n    this.originalUserZoomingEnabled = undefined;\r\n    this.originalUserPanningEnabled = undefined;\r\n\r\n    // Map events\r\n    this.map.off('move', this.onMapMoveBound);\r\n\r\n    // Map instance\r\n    this.map.remove();\r\n    this.map = undefined;\r\n\r\n    // Map container\r\n    this.mapContainer.remove();\r\n    this.mapContainer = undefined;\r\n\r\n    // Cytoscape unit viewport\r\n    if (this.options.animate) {\r\n      this.cy.animate({\r\n        zoom: this.originalZoom,\r\n        pan: this.originalPan,\r\n      }, {\r\n        duration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n        easing: 'linear',\r\n      });\r\n    } else {\r\n      this.cy.viewport(\r\n        this.originalZoom,\r\n        this.originalPan\r\n      );\r\n    }\r\n\r\n    this.originalZoom = undefined;\r\n    this.originalPan = undefined;\r\n\r\n    // Cytoscape positions\r\n    this.disableGeographicPositions();\r\n\r\n    this.cy = undefined;\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {cytoscape.NodeCollection} nodes\r\n   * @param {L.FitBoundsOptions} options\r\n   */\r\n  fit(nodes = this.cy.nodes(), options) {\r\n    const bounds = this.getNodeLngLatBounds(nodes);\r\n    if (!bounds.isValid()) {\r\n      return;\r\n    }\r\n\r\n    this.map.fitBounds(bounds, options);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  enableGeographicPositions() {\r\n    const nodes = this.cy.nodes();\r\n\r\n    this.originalPositions = Object.fromEntries(nodes.map(node => {\r\n      return [node.id(), { ...node.position() }];\r\n    }));\r\n\r\n    const positions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(\r\n      /** @type [string, cytoscape.Position | undefined][] */ (nodes.map(node => {\r\n        return [node.id(), this.getGeographicPosition(node)];\r\n      })).filter(([_id, position]) => {\r\n        return !!position;\r\n      })\r\n    ));\r\n\r\n    // hide nodes without position\r\n    const nodesWithoutPosition = nodes.filter(node => !positions[node.id()]);\r\n    nodesWithoutPosition.addClass(HIDDEN_CLASS).style('display', 'none');\r\n\r\n    this.cy.layout({\r\n      name: 'preset',\r\n      positions: positions,\r\n      fit: false,\r\n      animate: this.options.animate,\r\n      animationDuration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n      animationEasing: 'ease-out-cubic',\r\n    }).run();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeCollection | undefined} nodes\r\n   */\r\n  updateGeographicPositions(nodes = this.cy.nodes()) {\r\n    const positions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(\r\n      /** @type [string, cytoscape.Position | undefined][] */ (nodes.map(node => {\r\n        return [node.id(), this.getGeographicPosition(node)];\r\n      })).filter(([_id, position]) => {\r\n        return !!position;\r\n      })\r\n    ));\r\n\r\n    // update only positions which have changed, for cytoscape-edgehandles compatibility\r\n    const currentPositions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(nodes.map(node => {\r\n      return [node.id(), { ...node.position() }];\r\n    })));\r\n    const updatedPositions = /** @type cytoscape.NodePositionMap */ (Object.fromEntries(\r\n      Object.entries(positions).filter(([id, position]) => {\r\n        const currentPosition = currentPositions[id];\r\n        return !this.arePositionsEqual(currentPosition, position);\r\n      })\r\n    ));\r\n\r\n    // hide nodes without position\r\n    const nodesWithoutPosition = nodes.filter(node => !positions[node.id()]);\r\n    nodesWithoutPosition.addClass(HIDDEN_CLASS).style('display', 'none');\r\n\r\n    this.cy.layout({\r\n      name: 'preset',\r\n      positions: updatedPositions,\r\n      fit: false\r\n    }).run();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  disableGeographicPositions() {\r\n    const nodes = this.cy.nodes();\r\n\r\n    this.cy.layout({\r\n      name: 'preset',\r\n      positions: this.originalPositions,\r\n      fit: false,\r\n      animate: this.options.animate,\r\n      animationDuration: this.options.animationDuration ?? DEFAULT_ANIMATION_DURATION,\r\n      animationEasing: 'ease-in-cubic',\r\n      stop: () => {\r\n        // show nodes without position\r\n        const nodesWithoutPosition = nodes.filter(node => node.hasClass(HIDDEN_CLASS));\r\n        nodesWithoutPosition.removeClass(HIDDEN_CLASS).style('display', null);\r\n      }\r\n    }).run();\r\n\r\n    this.originalPositions = undefined;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {MouseEvent} event\r\n   */\r\n  onGraphContainerMouseDown(event) {\r\n    if (\r\n      event.buttons === 1 &&\r\n      !isMultSelKeyDown(event) &&\r\n      !this.cy.renderer().hoverData.down\r\n    ) {\r\n      this.cy.renderer().hoverData.dragging = true; // cytoscape-lasso compatibility\r\n      this.dispatchMapEvent(event);\r\n\r\n      document.addEventListener('mouseup', () => {\r\n        if (!this.panning) {\r\n          return;\r\n        }\r\n\r\n        this.panning = false;\r\n\r\n        // prevent unselecting in Cytoscape mouseup\r\n        this.cy.renderer().hoverData.dragged = true;\r\n      }, { once: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {MouseEvent} event\r\n   */\r\n  onGraphContainerMouseMove(event) {\r\n    if (\r\n      event.buttons === 1 &&\r\n      !isMultSelKeyDown(event) &&\r\n      !this.cy.renderer().hoverData.down\r\n    ) {\r\n      this.panning = true;\r\n\r\n      this.dispatchMapEvent(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {MouseEvent} event\r\n   */\r\n  onGraphContainerWheel(event) {\r\n    this.dispatchMapEvent(event);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onMapMove() {\r\n    this.updateGeographicPositions();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.EventObject} event\r\n   */\r\n  onGraphAdd(event) {\r\n    if (!event.target.isNode()) {\r\n      return;\r\n    }\r\n\r\n    const node = /** @type cytoscape.NodeSingular */ (event.target);\r\n\r\n    this.originalPositions[node.id()] = { ...node.position() };\r\n\r\n    const nodes = this.cy.collection().merge(node);\r\n    this.updateGeographicPositions(nodes);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onGraphResize() {\r\n    this.map.invalidateSize(false);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.EventObject} event\r\n   */\r\n  onGraphDragFree(event) {\r\n    const node = /** @type cytoscape.NodeSingular */ (event.target);\r\n\r\n    if (this.options.setPosition) {\r\n      const lngLat = this.map.containerPointToLatLng(node.position());\r\n      this.options.setPosition(node, lngLat);\r\n    }\r\n\r\n    const nodes = this.cy.collection().merge(node);\r\n    this.updateGeographicPositions(nodes);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {MouseEvent} event\r\n   */\r\n  dispatchMapEvent(event) {\r\n    if (event.target === this.mapContainer || this.mapContainer.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    const clonedEvent = new event.constructor(event.type, event);\r\n    this.map.getContainer().dispatchEvent(clonedEvent);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeSingular} node\r\n   * @return {L.LatLng | undefined}\r\n   */\r\n  getNodeLngLat(node) {\r\n    const lngLatLike = this.options.getPosition(node, this.map);\r\n    if (!lngLatLike) {\r\n      return;\r\n    }\r\n\r\n    let lngLat;\r\n    try {\r\n      lngLat = L.latLng(lngLatLike);\r\n    } catch (e) {\r\n      return;\r\n    }\r\n\r\n    return lngLat;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeCollection} nodes\r\n   * @return {L.LatLngBounds}\r\n   */\r\n  getNodeLngLatBounds(nodes = this.cy.nodes()) {\r\n    const bounds = nodes.reduce((bounds, node) => {\r\n      const lngLat = this.getNodeLngLat(node);\r\n      if (!lngLat) {\r\n        return bounds;\r\n      }\r\n\r\n      return bounds.extend(lngLat);\r\n    }, L.latLngBounds([]));\r\n    return bounds;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.NodeSingular} node\r\n   * @return {cytoscape.Position | undefined}\r\n   */\r\n  getGeographicPosition(node) {\r\n    const lngLat = this.getNodeLngLat(node);\r\n    if (!lngLat) {\r\n      return;\r\n    }\r\n\r\n    const position = this.map.latLngToContainerPoint(lngLat);\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {cytoscape.Position} position1\r\n   * @param {cytoscape.Position} position2\r\n   * @return {boolean}\r\n   */\r\n  arePositionsEqual(position1, position2) {\r\n    return position1.x === position2.x && position1.y === position2.y;\r\n  }\r\n}\r\n","import { MapHandler } from './map-handler';\r\n\r\nfunction register(cytoscape) {\r\n  if (!cytoscape) {\r\n    return;\r\n  }\r\n\r\n  cytoscape('core', 'L', function (mapConfig, config) {\r\n    return new MapHandler((this), mapConfig, config);\r\n  });\r\n}\r\n\r\nif (typeof window.cytoscape !== 'undefined') {\r\n  register(window.cytoscape);\r\n}\r\n\r\nexport default register;\r\n"],"names":["arr","Array","isArray","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","len","arr2","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","obj","isMultSelKeyDown","event","shiftKey","metaKey","ctrlKey","DEFAULT_FIT_PADDING","HIDDEN_CLASS","MapHandler","cy","mapOptions","options","this","onGraphContainerMouseDown","bind","onGraphContainerMouseMove","onGraphContainerWheel","onMapMove","onGraphAdd","onGraphResize","onGraphDragFree","getPosition","Function","Error","setPosition","originalAutoungrabify","autoungrabify","originalUserZoomingEnabled","userZoomingEnabled","originalUserPanningEnabled","userPanningEnabled","graphContainer","container","addEventListener","onGraphContainerMouseDownBound","onGraphContainerMouseMoveBound","onGraphContainerWheelBound","on","onGraphAddBound","onGraphResizeBound","onGraphDragFreeBound","mapContainer","document","createElement","style","position","top","left","width","height","insertBefore","renderer","data","canvasContainer","map","L","Map","fit","padding","animate","onMapMoveBound","originalZoom","zoom","originalPan","pan","x","y","duration","animationDuration","easing","viewport","enableGeographicPositions","removeEventListener","off","remove","disableGeographicPositions","nodes","bounds","getNodeLngLatBounds","isValid","fitBounds","originalPositions","fromEntries","node","id","positions","_this","getGeographicPosition","filter","addClass","layout","animationEasing","run","_this2","currentPositions","updatedPositions","entries","currentPosition","arePositionsEqual","nodesWithoutPosition","stop","hasClass","removeClass","buttons","hoverData","down","dragging","dispatchMapEvent","_this3","panning","dragged","once","updateGeographicPositions","isNode","collection","merge","invalidateSize","lngLat","containerPointToLatLng","contains","clonedEvent","type","getContainer","dispatchEvent","lngLatLike","latLng","e","reduce","_this4","getNodeLngLat","extend","latLngBounds","latLngToContainerPoint","position1","position2","register","cytoscape","mapConfig","config","window"],"mappings":"sWAIA,MAJA,SAAyBA,MACnBC,MAAMC,QAAQF,GAAM,OAAOA,GC0BjC,MA3BA,SAA+BA,EAAKG,MACZ,oBAAXC,QAA4BA,OAAOC,YAAYC,OAAON,QAC7DO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,UAGF,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETd,GAAKI,EAAKW,SAAWf,GAH8CK,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,cAGEX,GAAsB,MAAhBK,EAAE,QAAoBA,EAAE,oBAE/BJ,EAAI,MAAMC,UAIXH,ICdT,MAVA,SAA2BP,EAAKoB,IACnB,MAAPA,GAAeA,EAAMpB,EAAIkB,UAAQE,EAAMpB,EAAIkB,YAE1C,IAAIf,EAAI,EAAGkB,EAAO,IAAIpB,MAAMmB,GAAMjB,EAAIiB,EAAKjB,IAC9CkB,EAAKlB,GAAKH,EAAIG,UAGTkB,GCIT,MATA,SAAqCC,EAAGC,MACjCD,MACY,iBAANA,EAAgB,OAAOE,EAAiBF,EAAGC,OAClDE,EAAInB,OAAOoB,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,SAC1C,WAANJ,GAAkBH,EAAEQ,cAAaL,EAAIH,EAAEQ,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBxB,MAAM+B,KAAKV,GACxC,cAANG,GAAqB,2CAA2CQ,KAAKR,GAAWD,EAAiBF,EAAGC,YCJ1G,MAJA,iBACQ,IAAIW,UAAU,8ICWtB,MAJA,SAAwBlC,EAAKG,UACpBgC,EAAenC,IAAQoC,EAAqBpC,EAAKG,IAAMkC,EAA2BrC,EAAKG,IAAMmC,KCHtG,MANA,SAAyBC,EAAUC,QAC3BD,aAAoBC,SAClB,IAAIN,UAAU,sCCFxB,SAASO,EAAkBC,EAAQC,OAC5B,IAAIxC,EAAI,EAAGA,EAAIwC,EAAMzB,OAAQf,IAAK,KACjCyC,EAAaD,EAAMxC,GACvByC,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDzC,OAAO0C,eAAeN,EAAQE,EAAWK,IAAKL,IAUlD,MANA,SAAsBJ,EAAaU,EAAYC,UACzCD,GAAYT,EAAkBD,EAAYd,UAAWwB,GACrDC,GAAaV,EAAkBD,EAAaW,GACzCX,GCET,MAfA,SAAyBY,EAAKH,EAAKhC,UAC7BgC,KAAOG,EACT9C,OAAO0C,eAAeI,EAAKH,EAAK,CAC9BhC,MAAOA,EACP4B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZK,EAAIH,GAAOhC,EAGNmC,kkBCFT,SAASC,EAAiBC,UACjBA,EAAMC,UAAYD,EAAME,SAAWF,EAAMG,QAGlD,IAAMC,EAAsB,CAAC,GAAI,IAE3BC,EAAe,wBAERC,wBA4CCC,EAAIC,EAAYC,2XAhBlB,2CAEuBC,KAAKC,0BAA0BC,KAAKF,+CACpCA,KAAKG,0BAA0BD,KAAKF,2CACxCA,KAAKI,sBAAsBF,KAAKF,+BAC5CA,KAAKK,UAAUH,KAAKF,gCAEnBA,KAAKM,WAAWJ,KAAKF,mCAClBA,KAAKO,cAAcL,KAAKF,qCACtBA,KAAKQ,gBAAgBN,KAAKF,YAQ1CH,GAAKA,OACLC,WAAaA,OACbC,QAAUA,IAETC,KAAKD,QAAQU,uBAAuBC,gBAClC,IAAIC,MAAM,uCAEdX,KAAKD,QAAQa,eAAiBZ,KAAKD,QAAQa,uBAAuBF,gBAC9D,IAAIC,MAAM,yCAIbE,sBAAwBb,KAAKH,GAAGiB,qBAChCC,2BAA6Bf,KAAKH,GAAGmB,0BACrCC,2BAA6BjB,KAAKH,GAAGqB,0BAErCrB,GAAGmB,oBAAmB,QACtBnB,GAAGqB,oBAAmB,OAGrBC,OAAgDtB,GAAGuB,YACzDD,EAAeE,iBAAiB,YAAarB,KAAKsB,gCAClDH,EAAeE,iBAAiB,YAAarB,KAAKuB,gCAClDJ,EAAeE,iBAAiB,QAASrB,KAAKwB,iCACzC3B,GAAG4B,GAAG,MAAOzB,KAAK0B,sBAClB7B,GAAG4B,GAAG,SAAUzB,KAAK2B,yBACrB9B,GAAG4B,GAAG,WAAYzB,KAAK4B,2BAGvBC,aAAeC,SAASC,cAAc,YACtCF,aAAaG,MAAMC,SAAW,gBAC9BJ,aAAaG,MAAME,IAAM,WACzBL,aAAaG,MAAMG,KAAO,WAC1BN,aAAaG,MAAMI,MAAQ,YAC3BP,aAAaG,MAAMK,OAAS,OACjClB,EAAemB,aAAatC,KAAK6B,aAAc7B,KAAKH,GAAG0C,WAAWC,KAAKC,sBAGlEC,IAAM,IAAIC,UAAEC,IAAI5C,KAAK6B,aAAc7B,KAAKF,iBACxC+C,SAAIlG,EAAW,CAAEmG,QAASpD,EAAqBqD,SAAS,SAGxDL,IAAIjB,GAAG,OAAQzB,KAAKgD,qBAGpBC,aAAejD,KAAKH,GAAGqD,YACvBC,iBAAmBnD,KAAKH,GAAGuD,aAG1BA,EAAM,CAAEC,EAAG,EAAGC,EAAG,GAEnBtD,KAAKD,QAAQgD,aACVlD,GAAGkD,QAAQ,CACdG,KALS,EAMTE,IAAKA,GACJ,CACDG,mBAAUvD,KAAKD,QAAQyD,iCAxGI,IAyG3BC,OAAQ,gBAGL5D,GAAG6D,SAZG,EAcTN,QAKCO,8EAKCxC,OAAgDtB,GAAGuB,aACzDD,EAAeyC,oBAAoB,YAAa5D,KAAKsB,gCACrDH,EAAeyC,oBAAoB,YAAa5D,KAAKuB,gCACrDJ,EAAeyC,oBAAoB,QAAS5D,KAAKwB,iCAC5C3B,GAAGgE,IAAI,MAAO7D,KAAK0B,sBACnB7B,GAAGgE,IAAI,SAAU7D,KAAK2B,yBACtB9B,GAAGgE,IAAI,WAAY7D,KAAK4B,2BAGxB/B,GAAGiB,cAAcd,KAAKa,4BACtBhB,GAAGmB,mBAAmBhB,KAAKe,iCAC3BlB,GAAGqB,mBAAmBlB,KAAKiB,iCAE3BJ,2BAAwBlE,OACxBoE,gCAA6BpE,OAC7BsE,gCAA6BtE,OAG7B+F,IAAImB,IAAI,OAAQ7D,KAAKgD,qBAGrBN,IAAIoB,cACJpB,SAAM/F,OAGNkF,aAAaiC,cACbjC,kBAAelF,EAGhBqD,KAAKD,QAAQgD,cACVlD,GAAGkD,QAAQ,CACdG,KAAMlD,KAAKiD,aACXG,IAAKpD,KAAKmD,aACT,CACDI,mBAAUvD,KAAKD,QAAQyD,iCA1JI,IA2J3BC,OAAQ,gBAGL5D,GAAG6D,SACN1D,KAAKiD,aACLjD,KAAKmD,kBAIJF,kBAAetG,OACfwG,iBAAcxG,OAGdoH,kCAEAlE,QAAKlD,OACLoD,aAAUpD,oCAObqH,yDAAQhE,KAAKH,GAAGmE,QAASjE,yCACrBkE,EAASjE,KAAKkE,oBAAoBF,GACnCC,EAAOE,gBAIPzB,IAAI0B,UAAUH,EAAQlE,oEAOrBiE,EAAQhE,KAAKH,GAAGmE,aAEjBK,kBAAoB/H,OAAOgI,YAAYN,EAAMtB,KAAI,SAAA6B,SAC7C,CAACA,EAAKC,UAAWD,EAAKtC,qBAGzBwC,EAAoDnI,OAAOgI,YACNN,EAAMtB,KAAI,SAAA6B,SAC1D,CAACA,EAAKC,KAAME,EAAKC,sBAAsBJ,OAC5CK,QAAO,+CAMgBZ,EAAMY,QAAO,SAAAL,UAASE,EAAUF,EAAKC,SAC7CK,SAASlF,GAAcqC,MAAM,UAAW,aAExDnC,GAAGiF,OAAO,CACb/G,KAAM,SACN0G,UAAWA,EACX5B,KAAK,EACLE,QAAS/C,KAAKD,QAAQgD,QACtBS,4BAAmBxD,KAAKD,QAAQyD,iCAtNH,IAuN7BuB,gBAAiB,mBAChBC,qEAOqBhB,yDAAQhE,KAAKH,GAAGmE,QAClCS,EAAoDnI,OAAOgI,YACNN,EAAMtB,KAAI,SAAA6B,SAC1D,CAACA,EAAKC,KAAMS,EAAKN,sBAAsBJ,OAC5CK,QAAO,+CAMPM,EAA2D5I,OAAOgI,YAAYN,EAAMtB,KAAI,SAAA6B,SACrF,CAACA,EAAKC,UAAWD,EAAKtC,iBAEzBkD,EAA2D7I,OAAOgI,YACtEhI,OAAO8I,QAAQX,GAAWG,QAAO,yBAAEJ,OAAIvC,OAC/BoD,EAAkBH,EAAiBV,UACjCS,EAAKK,kBAAkBD,EAAiBpD,OAK9CsD,EAAuBvB,EAAMY,QAAO,SAAAL,UAASE,EAAUF,EAAKC,SAClEe,EAAqBV,SAASlF,GAAcqC,MAAM,UAAW,aAExDnC,GAAGiF,OAAO,CACb/G,KAAM,SACN0G,UAAWU,EACXtC,KAAK,IACJmC,iEAOGhB,EAAQhE,KAAKH,GAAGmE,aAEjBnE,GAAGiF,OAAO,CACb/G,KAAM,SACN0G,UAAWzE,KAAKqE,kBAChBxB,KAAK,EACLE,QAAS/C,KAAKD,QAAQgD,QACtBS,4BAAmBxD,KAAKD,QAAQyD,iCAzQH,IA0Q7BuB,gBAAiB,gBACjBS,KAAM,WAEyBxB,EAAMY,QAAO,SAAAL,UAAQA,EAAKkB,SAAS9F,MAC3C+F,YAAY/F,GAAcqC,MAAM,UAAW,SAEjEgD,WAEEX,uBAAoB1H,oDAOD2C,cAEJ,IAAlBA,EAAMqG,SACLtG,EAAiBC,IACjBU,KAAKH,GAAG0C,WAAWqD,UAAUC,YAEzBhG,GAAG0C,WAAWqD,UAAUE,UAAW,OACnCC,iBAAiBzG,GAEtBwC,SAAST,iBAAiB,WAAW,WAC9B2E,EAAKC,UAIVD,EAAKC,SAAU,EAGfD,EAAKnG,GAAG0C,WAAWqD,UAAUM,SAAU,KACtC,CAAEC,MAAM,uDAQW7G,GAEJ,IAAlBA,EAAMqG,SACLtG,EAAiBC,IACjBU,KAAKH,GAAG0C,WAAWqD,UAAUC,YAEzBI,SAAU,OAEVF,iBAAiBzG,kDAQJA,QACfyG,iBAAiBzG,4CAOjB8G,+DAOI9G,MACJA,EAAMZ,OAAO2H,cAIZ9B,EAA4CjF,EAAMZ,YAEnD2F,kBAAkBE,EAAKC,WAAaD,EAAKtC,gBAExC+B,EAAQhE,KAAKH,GAAGyG,aAAaC,MAAMhC,QACpC6B,0BAA0BpC,iDAO1BtB,IAAI8D,gBAAe,2CAOVlH,OACRiF,EAA4CjF,EAAMZ,UAEpDsB,KAAKD,QAAQa,YAAa,KACtB6F,EAASzG,KAAK0C,IAAIgE,uBAAuBnC,EAAKtC,iBAC/ClC,QAAQa,YAAY2D,EAAMkC,OAG3BzC,EAAQhE,KAAKH,GAAGyG,aAAaC,MAAMhC,QACpC6B,0BAA0BpC,4CAOhB1E,MACXA,EAAMZ,SAAWsB,KAAK6B,eAAgB7B,KAAK6B,aAAa8E,SAASrH,EAAMZ,aAIrEkI,EAAc,IAAItH,EAAMxB,YAAYwB,EAAMuH,KAAMvH,QACjDoD,IAAIoE,eAAeC,cAAcH,0CAQ1BrC,OACNyC,EAAahH,KAAKD,QAAQU,YAAY8D,EAAMvE,KAAK0C,QAClDsE,OAIDP,MAEFA,EAAS9D,UAAEsE,OAAOD,GAClB,MAAOE,iBAIFT,4DAQWzC,yDAAQhE,KAAKH,GAAGmE,QAC5BC,EAASD,EAAMmD,QAAO,SAAClD,EAAQM,OAC7BkC,EAASW,EAAKC,cAAc9C,UAC7BkC,EAIExC,EAAOqD,OAAOb,GAHZxC,IAIRtB,UAAE4E,aAAa,YACXtD,gDAQaM,OACdkC,EAASzG,KAAKqH,cAAc9C,MAC7BkC,SAIYzG,KAAK0C,IAAI8E,uBAAuBf,6CAUjCgB,EAAWC,UACpBD,EAAUpE,IAAMqE,EAAUrE,GAAKoE,EAAUnE,IAAMoE,EAAUpE,WC5cpE,SAASqE,EAASC,GACXA,GAILA,EAAU,OAAQ,KAAK,SAAUC,EAAWC,UACnC,IAAIlI,EAAYI,KAAO6H,EAAWC,kBAIb,IAArBC,OAAOH,WAChBD,EAASI,OAAOH"}